{"version":3,"sources":["Lobby.js","Participant.js","Room.js","VideoChat.js","App.js","reportWebVitals.js","index.js"],"names":["Lobby","username","handleUsernameChange","roomName","handleRoomNameChange","handleSubmit","connecting","onSubmit","htmlFor","type","id","value","onChange","readOnly","required","disabled","Participant","participant","useState","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","useRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","useEffect","on","kind","v","a","removeAllListeners","videoTrack","attach","current","document","getElementById","style","transform","detach","audioTrack","className","identity","ref","autoPlay","Room","room","handleLogout","participants","setParticipants","participantConnected","prevParticipants","participantDisconnected","p","forEach","off","remoteParticipants","sid","onClick","localParticipant","VideoChat","setUsername","setRoomName","setRoom","setConnecting","useCallback","event","target","preventDefault","fetch","then","res","text","token","Video","connect","name","catch","err","console","error","prevRoom","tracks","trackPub","stop","disconnect","tidyUp","persisted","window","addEventListener","removeEventListener","App","role","aria-label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f55b3f50.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Lobby = ({\n    username,\n    handleUsernameChange,\n    roomName,\n    handleRoomNameChange,\n    handleSubmit,\n    connecting,\n}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2>Enter a room</h2>\n            <div>\n                <label htmlFor=\"name\">Name:</label>\n                <input\n                    type=\"text\"\n                    id=\"field\"\n                    value={username}\n                    onChange={handleUsernameChange}\n                    readOnly={connecting}\n                    required\n                />\n            </div>\n\n            <div>\n                <label htmlFor=\"room\">Room name:</label>\n                <input\n                    type=\"text\"\n                    id=\"room\"\n                    value={roomName}\n                    onChange={handleRoomNameChange}\n                    readOnly={connecting}\n                    required\n                />\n            </div>\n\n            <button type=\"submit\" disabled={connecting}>\n                {connecting ? \"Connecting\" : \"Join\"}\n            </button>\n        </form>\n    );\n};\n\nexport default Lobby;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nconst Participant = ({ participant }) => {\n    const [videoTracks, setVideoTracks] = useState([]);\n    const [audioTracks, setAudioTracks] = useState([]);\n\n    const videoRef = useRef();\n    const audioRef = useRef();\n\n    const trackpubsToTracks = (trackMap) =>\n        Array.from(trackMap.values())\n            .map((publication) => publication.track)\n            .filter((track) => track !== null);\n\n    useEffect(() => {\n        setVideoTracks(trackpubsToTracks(participant.videoTracks));\n        setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n        const trackSubscribed = (track) => {\n            if (track.kind === \"video\") {\n                setVideoTracks((videoTracks) => [...videoTracks, track]);\n            } else if (track.kind === \"audio\") {\n                setAudioTracks((audioTracks) => [...audioTracks, track]);\n            }\n        };\n\n        const trackUnsubscribed = (track) => {\n            if (track.kind === \"video\") {\n                setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\n            } else if (track.kind === \"audio\") {\n                setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\n            }\n        };\n\n        participant.on(\"trackSubscribed\", trackSubscribed);\n        participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n\n        return () => {\n            setVideoTracks([]);\n            setAudioTracks([]);\n            participant.removeAllListeners();\n        };\n    }, [participant]);\n\n    useEffect(() => {\n        const videoTrack = videoTracks[0];\n        if (videoTrack) {\n            videoTrack.attach(videoRef.current);\n            // mirror effect\n            const video = document.getElementById('video');\n            video.style.transform = 'scale(-1, 1)';\n            return () => {\n                videoTrack.detach();\n            };\n        }\n    }, [videoTracks]);\n\n    useEffect(() => {\n        const audioTrack = audioTracks[0];\n        if (audioTrack) {\n            audioTrack.attach(audioRef.current);\n            return () => {\n                audioTrack.detach();\n            };\n        }\n    }, [audioTracks]);\n\n    return (\n        <div className=\"participant\">\n            <h3>{participant.identity}</h3>\n            <video id=\"video\" ref={videoRef} autoPlay={true} />\n            <audio ref={audioRef} autoPlay={true} />\n            {/* <audio ref={audioRef} autoPlay={true} muted={true} /> */}\n        </div>\n    );\n};\n\nexport default Participant;\n","import React, { useEffect, useState } from \"react\";\nimport Participant from \"./Participant\";\n\nconst Room = ({ roomName, room, handleLogout }) => {\n    const [participants, setParticipants] = useState([]);\n\n    useEffect(() => {\n        const participantConnected = (participant) => {\n            setParticipants((prevParticipants) => [...prevParticipants, participant]);\n        };\n\n        const participantDisconnected = (participant) => {\n            setParticipants((prevParticipants) =>\n                prevParticipants.filter((p) => p !== participant)\n            );\n        };\n\n        room.on(\"participantConnected\", participantConnected);\n        room.on(\"participantDisconnected\", participantDisconnected);\n        room.participants.forEach(participantConnected);\n        return () => {\n            room.off(\"participantConnected\", participantConnected);\n            room.off(\"participantDisconnected\", participantDisconnected);\n        };\n    }, [room]);\n\n    const remoteParticipants = participants.map((participant) => (\n        <Participant key={participant.sid} participant={participant} />\n    ));\n\n    return (\n        <div className=\"room\">\n            <h2>Room: {roomName}</h2>\n            <button onClick={handleLogout}>Log out</button>\n            <div className=\"video-container\">\n                <div className=\"local-participant\">\n                    {room ? (\n                        <Participant\n                            key={room.localParticipant.sid}\n                            participant={room.localParticipant}\n                        />\n                    ) : (\n                            \"\"\n                        )}\n                </div>\n                {/* <h3>Remote Participants</h3> */}\n                <div className=\"remote-participants\">{remoteParticipants}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default Room;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport Video from \"twilio-video\";\nimport Lobby from \"./Lobby\";\nimport Room from \"./Room\";\n\nconst VideoChat = () => {\n    const [username, setUsername] = useState(\"\");\n    const [roomName, setRoomName] = useState(\"\");\n    const [room, setRoom] = useState(null);\n    const [connecting, setConnecting] = useState(false);\n\n    const handleUsernameChange = useCallback((event) => {\n        setUsername(event.target.value);\n    }, []);\n\n    const handleRoomNameChange = useCallback((event) => {\n        setRoomName(event.target.value);\n    }, []);\n\n    const handleSubmit = useCallback(\n        async (event) => {\n            event.preventDefault();\n            setConnecting(true);\n            const url = 'https://pacific-hamlet-35469.herokuapp.com/token';\n            const token = await fetch(`${url}?identity=${username}&roomName=${roomName}`).then(res => res.text());\n            Video.connect(token, {\n                name: roomName,\n            }).then(room => {\n                setConnecting(false);\n                setRoom(room);\n            }).catch(err => {\n                console.error(err);\n                setConnecting(false);\n            });\n        },\n        [roomName, username]\n    );\n\n    const handleLogout = useCallback(() => {\n        setRoom((prevRoom) => {\n            if (prevRoom) {\n                prevRoom.localParticipant.tracks.forEach((trackPub) => {\n                    trackPub.track.stop();\n                });\n                prevRoom.disconnect();\n            }\n            return null;\n        });\n    }, []);\n\n    useEffect(() => {\n        if (room) {\n            const tidyUp = (event) => {\n                if (event.persisted) {\n                    return;\n                }\n                if (room) {\n                    handleLogout();\n                }\n            };\n            window.addEventListener(\"pagehide\", tidyUp);\n            window.addEventListener(\"beforeunload\", tidyUp);\n            return () => {\n                window.removeEventListener(\"pagehide\", tidyUp);\n                window.removeEventListener(\"beforeunload\", tidyUp);\n            };\n        }\n    }, [room, handleLogout]);\n\n    let render;\n    if (room) {\n        render = (\n            <Room roomName={roomName} room={room} handleLogout={handleLogout} />\n        );\n    } else {\n        render = (\n            <Lobby\n                username={username}\n                roomName={roomName}\n                handleUsernameChange={handleUsernameChange}\n                handleRoomNameChange={handleRoomNameChange}\n                handleSubmit={handleSubmit}\n                connecting={connecting}\n            />\n        );\n    }\n    return render;\n};\n\nexport default VideoChat;\n","import React from 'react';\nimport './App.css';\nimport VideoChat from './VideoChat';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Twilio Video Chat</h1>\n      </header>\n      <main>\n        <VideoChat />\n      </main>\n      <footer>\n        <p>\n          Made with{' '}\n          <span role=\"img\" aria-label=\"React\">\n            ⚛️\n          </span>{' '}\n\n        </p>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}